What is StringBuilder?
Part of java.lang package.

Mutable sequence of characters.

Ideal for frequent string manipulations (e.g., concatenation, reversal).

Not thread-safe (unlike StringBuffer), but faster in single-threaded environments.



public class StringBuilderDemo {
    public static void main(String[] args) {
        // Create a StringBuilder
        StringBuilder sb = new StringBuilder("Hello");

        // Append text
        sb.append(" World");
        System.out.println("Append: " + sb); // Hello World

        // Insert text
        sb.insert(6, "Java ");
        System.out.println("Insert: " + sb); // Hello Java World

        // Delete a range of characters
        sb.delete(6, 11);
        System.out.println("Delete: " + sb); // Hello World

        // Delete a single character
        sb.deleteCharAt(5);
        System.out.println("DeleteCharAt: " + sb); // HelloWorld

        // Replace a range of characters
        sb.replace(5, 10, " Java");
        System.out.println("Replace: " + sb); // Hello Java

        // Reverse the string
        sb.reverse();
        System.out.println("Reverse: " + sb); // avaJ olleH

        // Convert to String
        String str = sb.toString();
        System.out.println("ToString: " + str);

        // Set a character at a specific index
        sb.setCharAt(0, 'X');
        System.out.println("SetCharAt: " + sb); // XvaJ olleH

        // Get a character at a specific index
        char ch = sb.charAt(2);
        System.out.println("CharAt(2): " + ch); // a

        // Get length
        int len = sb.length();
        System.out.println("Length: " + len);

        // Get capacity
        int cap = sb.capacity();
        System.out.println("Capacity: " + cap);

        // Ensure capacity.
        /*
            Capacity refers to the amount of memory allocated for the StringBuilder to store characters.

It’s not the same as the length of the string.

length() → number of characters currently in the string

capacity() → total space available before resizing is needed
        */
        sb.ensureCapacity(100);
        System.out.println("Capacity after ensureCapacity(100): " + sb.capacity());
    }
}

